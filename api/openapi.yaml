openapi: 3.0.3
info:
  title: Back-end Biskato Docs 1.0.0
  description: Esta e a documentacao oficial do back end do biskato.
  termsOfService: http://swagger.io/terms/
  contact:
    email: estrelas@pnclique.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://petstore3.swagger.io/api/v3
tags:
- name: User
  description: Descrição de todas operaçoes e rotas das funcionalidade pessoais e
    coletivas de um usuario
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: Jobs
  description: "Descrição de todas operaçoes e rotas de publicação, edição, pesquisa\
    \ e exclusão de biskatos"
  externalDocs:
    description: Find out more about our store
    url: http://swagger.io
- name: Bank account
  description: Descrição de todas operaçoes e rotas das contas bancarias
paths:
  /auth:
    post:
      tags:
      - User
      summary: Rota para autenticao de usuarios
      description: Faz a autenticao de usuarios usando o email e a senha
      operationId: addPet
      requestBody:
        description: Faz a autenticao de usuarios usando o seu email e a sua senha
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuth'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserAuth'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAuth'
        required: true
      responses:
        "200":
          description: Autenticacao bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Email ou senha incorretas
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: User
  /register:
    post:
      tags:
      - User
      summary: Rota para registro de usuarios
      description: Faz o regsitro de novos usuarios
      operationId: registerUser
      requestBody:
        description: "Faz a autenticao de usuarios usando o seu o email, nome, phone,\
          \ pin code e a senha"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        "201":
          description: Registro bem sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Erro geral de registro
        "401":
          description: Ja existe uma conta com esse e-mail
        "423":
          description: Ja existe uma conta com esse codigo pin
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: User
  /user/update/{id}:
    put:
      tags:
      - User
      summary: Rota para editar dados de usuarios
      description: "Faz a edicao dos dados dos usuarios, precisa substituir o id pelo\
        \ id do usuario a ser editado e precisa de um token gerado na autenticacao\
        \ ou registro"
      operationId: editUser
      parameters:
      - name: id
        in: path
        description: ID do usuario a ser editado
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Para editar o usuario e preciso preencher os campos abaixos
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "200":
          description: Edicao de usuario bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
        "400":
          description: Erro geral de edicao de usuario
        "404":
          description: Usuario nao encontrado
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: User
  /user/change-password/{id}:
    put:
      tags:
      - User
      summary: Rota para editar a senha de um usuario
      description: "Faz a edicao da senha de um usuario, precisa substituir o id pelo\
        \ id do usuario a ser editado e precisa de um token gerado na autenticacao\
        \ ou registro"
      operationId: editPasswordUser
      parameters:
      - name: id
        in: path
        description: ID do usuario a ser editado
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Para editar a senha de um usuario is preciso preencher os campos
          abaixos
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
        required: true
      responses:
        "200":
          description: Edicao da senha do usuario bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
        "400":
          description: Erro geral de edicao de senhas de usuario
        "404":
          description: Usuario nao encontrado
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: User
  /user/change-code/{id}:
    put:
      tags:
      - User
      summary: Rota para editar o codigo pin de um usuario
      description: "Faz a edicao do codigo pin de um usuario, precisa substituir o\
        \ id pelo id do usuario a ser editado e precisa de um token gerado na autenticacao\
        \ ou registro"
      operationId: editCodePinUser
      parameters:
      - name: id
        in: path
        description: ID do usuario a ser editado
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Para editar o codigo pin de um usuario is preciso preencher os
          campos abaixos
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangeCodePin'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserChangeCodePin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserChangeCodePin'
        required: true
      responses:
        "200":
          description: Edicao do codigo pin do usuario bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
        "400":
          description: Erro geral de edicao do codigo pin do usuario
        "401":
          description: Ja existe um usuario com esse codigo pin
        "404":
          description: Usuario nao encontrado
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: User
  /users:
    get:
      tags:
      - User
      summary: Retorna todos os usuarios
      description: Retorna uma lista de todos os usuarios registrados - precisas de
        um token
      operationId: getAllUsers
      responses:
        "200":
          description: Operacao feita com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
            application/xml:
              schema:
                $ref: '#/components/schemas/AllUsers'
      security:
      - api_key: []
      x-swagger-router-controller: User
  /user/{id}:
    get:
      tags:
      - User
      summary: Rota para pegar ou ver os dados de apenas um usuario
      description: "Essa rota retorna os dados de apenas um usuario pelo seu id, precisa\
        \ substituir o id pelo id do usuario a ser visualizado e precisa de um token\
        \ gerado na autenticacao ou registro"
      operationId: viewUser
      parameters:
      - name: id
        in: path
        description: ID do usuario a ser visualizado
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Operacao de visualizacao de usuario bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
        "400":
          description: Erro geral de visualizacao de usuario
        "404":
          description: Usuario nao encontrado
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: User
  /user/search/{search}:
    get:
      tags:
      - User
      summary: Rota para pesquisa de usuarios
      description: "Essa rota faz a pesquisa de usuarios pelo seu nome ou e-mail,\
        \ precisa substituir o search pelo nome ou e-mail do usuario a ser pesquisado\
        \ e precisa de um token gerado na autenticacao ou registro"
      operationId: searchUser
      parameters:
      - name: search
        in: path
        description: SEARCH nome ou e-mail do usuario a ser pesquisado
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Operacao de pesquisa de usuario bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsers'
            application/xml:
              schema:
                $ref: '#/components/schemas/AllUsers'
        "400":
          description: Erro geral de visualizacao de usuario
        "404":
          description: Usuario nao encontrado
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: User
  /job:
    post:
      tags:
      - Jobs
      summary: Rota para publicacao de biskatos
      description: Faz o cadastro de novos biskato
      operationId: pubJobs
      requestBody:
        description: Faz o cadastro e a publicacao de novos biskatos
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jobs'
          application/xml:
            schema:
              $ref: '#/components/schemas/Jobs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Jobs'
        required: true
      responses:
        "201":
          description: Cadastro de biskatos bem sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsUpdateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobsUpdateResponse'
        "400":
          description: Erro geral de registro
        "401":
          description: Ja existe uma conta com esse e-mail
        "423":
          description: Ja existe uma conta com esse codigo pin
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: Jobs
  /job/update/{id}:
    put:
      tags:
      - Jobs
      summary: Rota para editar dados de usuarios
      description: "Faz a edicao dos dados dos usuarios, precisa substituir o id pelo\
        \ id do usuario a ser editado e precisa de um token gerado na autenticacao\
        \ ou registro"
      operationId: editJob
      parameters:
      - name: id
        in: path
        description: ID do usuario a ser editado
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: Para editar o usuario e preciso preencher os campos abaixos
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "200":
          description: Edicao de usuario bem sucedida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserUpdateResponse'
        "400":
          description: Erro geral de edicao de usuario
        "404":
          description: Usuario nao encontrado
      security:
      - petstore_auth:
        - write:pets
        - read:pets
      x-swagger-router-controller: Jobs
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        petId:
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          format: int32
          example: 7
        shipDate:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
          - placed
          - approved
          - delivered
        complete:
          type: boolean
      xml:
        name: order
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        username:
          type: string
          example: fehguy
        address:
          type: array
          xml:
            name: addresses
            wrapped: true
          items:
            $ref: '#/components/schemas/Address'
      xml:
        name: customer
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: "94301"
      xml:
        name: address
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Dogs
      xml:
        name: category
    UserAuth:
      type: object
      properties:
        email:
          type: string
          example: eduardo01@email.com
        password:
          type: string
          example: "12345678"
      xml:
        name: user
    UserRegister:
      type: object
      properties:
        email:
          type: string
          example: cariege01@email.com
        password:
          type: string
          example: "12345678"
        name:
          type: string
          example: Osvaldo Cariege
        phone:
          type: string
          example: "942578934"
        pin_code:
          type: string
          example: "1234"
      xml:
        name: user
    UserChangePassword:
      type: object
      properties:
        password:
          type: string
          example: "12345678"
        new_password:
          type: string
          example: "123456"
        confirm_password:
          type: string
          example: "123456"
      xml:
        name: user
    UserChangeCodePin:
      type: object
      properties:
        old_pin_code:
          type: string
          example: "1236"
        new_pin_code:
          type: string
          example: "1234"
        confirm_pin_code:
          type: string
          example: "1234"
      xml:
        name: user
    UserUpdate:
      type: object
      properties:
        email:
          type: string
          example: eduardo01@email.com
        birth_date:
          type: string
          example: 07/07/2001
        name:
          type: string
          example: Edocha Afonso
        image:
          type: string
          example: my_photo.png
        address:
          type: string
          example: "Luanda, viana"
        phone:
          type: string
          example: "936654821"
        genre:
          type: string
          example: Masculino
        province:
          type: string
          example: Luanda
        country:
          type: string
          example: Angola
        nif:
          type: string
          example: LA1234AOB2
      xml:
        name: user
    UserUpdateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          example: eduardo01@email.com
        birth_date:
          type: string
          example: 07/07/2001
        name:
          type: string
          example: Edocha Afonso
        image:
          type: string
          example: my_photo.png
        address:
          type: string
          example: "Luanda, viana"
        phone:
          type: string
          example: "936654821"
        genre:
          type: string
          example: Masculino
        province:
          type: string
          example: Luanda
        country:
          type: string
          example: Angola
        nif:
          type: string
          example: LA1234AOB2
        pin_code:
          type: string
          example: "1234"
        password:
          type: string
          example: "12345678"
      example:
        image: my_photo.png
        country: Angola
        address: "Luanda, viana"
        birth_date: 07/07/2001
        pin_code: "1234"
        nif: LA1234AOB2
        password: "12345678"
        province: Luanda
        phone: "936654821"
        name: Edocha Afonso
        genre: Masculino
        id: 1
        email: eduardo01@email.com
      xml:
        name: user
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        email:
          type: string
          example: eduardo01@email.com
        password:
          type: string
          example: "12345678"
        name:
          type: string
          example: Edocha Afonso
        image:
          type: string
          example: my_photo.png
        address:
          type: string
          example: "Luanda, viana"
        phone:
          type: string
          example: "936654821"
        pin_code:
          type: string
          example: "1234"
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
      example:
        image: my_photo.png
        password: "12345678"
        address: "Luanda, viana"
        phone: "936654821"
        pin_code: "1234"
        name: Edocha Afonso
        id: 1
        email: eduardo01@email.com
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
      xml:
        name: user
    AllUsers:
      type: object
      properties:
        users:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/UserUpdateResponse'
      example:
        users:
        - image: my_photo.png
          country: Angola
          address: "Luanda, viana"
          birth_date: 07/07/2001
          pin_code: "1234"
          nif: LA1234AOB2
          password: "12345678"
          province: Luanda
          phone: "936654821"
          name: Edocha Afonso
          genre: Masculino
          id: 1
          email: eduardo01@email.com
        - image: my_photo.png
          country: Angola
          address: "Luanda, viana"
          birth_date: 07/07/2001
          pin_code: "1234"
          nif: LA1234AOB2
          password: "12345678"
          province: Luanda
          phone: "936654821"
          name: Edocha Afonso
          genre: Masculino
          id: 1
          email: eduardo01@email.com
      xml:
        name: user
    Jobs:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: Preciso de um barbeiro
        description:
          type: string
          example: Preciso de um barbeiro para cortar cabelo ao meu filho.
        remuneration:
          type: string
          example: "2500"
        image:
          type: string
          example: biskato_photo.png
        address:
          type: string
          example: "Luanda, viana, grafanil"
        requeriments:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/JobsRequeriments'
        responsibility:
          type: string
          example: Cortar bem o cabelo
      example:
        image: biskato_photo.png
        requeriments:
        - item_3: Saber pintar o cabelo
          item_2: Saber fazer laminagem
          item_1: Saber cortar o cabelo
        - item_3: Saber pintar o cabelo
          item_2: Saber fazer laminagem
          item_1: Saber cortar o cabelo
        address: "Luanda, viana, grafanil"
        responsibility: Cortar bem o cabelo
        description: Preciso de um barbeiro para cortar cabelo ao meu filho.
        id: 1
        remuneration: "2500"
        title: Preciso de um barbeiro
      xml:
        name: jobs
    JobsUpdateResponse:
      type: object
      properties:
        job:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Jobs'
      example:
        job:
        - image: biskato_photo.png
          requeriments:
          - item_3: Saber pintar o cabelo
            item_2: Saber fazer laminagem
            item_1: Saber cortar o cabelo
          - item_3: Saber pintar o cabelo
            item_2: Saber fazer laminagem
            item_1: Saber cortar o cabelo
          address: "Luanda, viana, grafanil"
          responsibility: Cortar bem o cabelo
          description: Preciso de um barbeiro para cortar cabelo ao meu filho.
          id: 1
          remuneration: "2500"
          title: Preciso de um barbeiro
        - image: biskato_photo.png
          requeriments:
          - item_3: Saber pintar o cabelo
            item_2: Saber fazer laminagem
            item_1: Saber cortar o cabelo
          - item_3: Saber pintar o cabelo
            item_2: Saber fazer laminagem
            item_1: Saber cortar o cabelo
          address: "Luanda, viana, grafanil"
          responsibility: Cortar bem o cabelo
          description: Preciso de um barbeiro para cortar cabelo ao meu filho.
          id: 1
          remuneration: "2500"
          title: Preciso de um barbeiro
      xml:
        name: job
    JobsRequeriments:
      type: object
      properties:
        item_1:
          type: string
          example: Saber cortar o cabelo
        item_2:
          type: string
          example: Saber fazer laminagem
        item_3:
          type: string
          example: Saber pintar o cabelo
      example:
        item_3: Saber pintar o cabelo
        item_2: Saber fazer laminagem
        item_1: Saber cortar o cabelo
      xml:
        name: jobsRequeriments
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    Pet:
      required:
      - name
      - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        category:
          $ref: '#/components/schemas/Category'
        photoUrls:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: photoUrl
        tags:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
          - available
          - pending
          - sold
      xml:
        name: pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
